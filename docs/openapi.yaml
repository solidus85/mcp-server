openapi: 3.1.0
info:
  title: MCP Server API
  description: Model Context Protocol server with vector database and LLM integration
  version: 0.1.0
paths:
  /api/v1/health:
    get:
      tags:
      - Health
      summary: Health Check
      description: Check service health status
      operationId: health_check_api_v1_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /api/v1/health/detailed:
    get:
      tags:
      - Health
      summary: Health Check Detailed
      description: Detailed health check with component status
      operationId: health_check_detailed_api_v1_health_detailed_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/ready:
    get:
      tags:
      - Health
      summary: Readiness Check
      description: Kubernetes readiness probe
      operationId: readiness_check_api_v1_ready_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/live:
    get:
      tags:
      - Health
      summary: Liveness Check
      description: Kubernetes liveness probe
      operationId: liveness_check_api_v1_live_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/alive:
    get:
      tags:
      - Health
      summary: Alive Check
      description: Alternative liveness check endpoint
      operationId: alive_check_api_v1_alive_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/ping:
    get:
      tags:
      - Health
      summary: Ping
      description: Simple ping endpoint
      operationId: ping_api_v1_ping_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/version:
    get:
      tags:
      - Health
      summary: Version Info
      description: Get version information
      operationId: version_info_api_v1_version_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/metrics:
    get:
      tags:
      - Health
      summary: Metrics Endpoint
      description: Get application metrics
      operationId: metrics_endpoint_api_v1_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/auth/login:
    post:
      tags:
      - Authentication
      summary: Login
      description: Authenticate user and return access token
      operationId: login_api_v1_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/register:
    post:
      tags:
      - Authentication
      summary: Register
      description: Register a new user
      operationId: register_api_v1_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/me:
    get:
      tags:
      - Authentication
      summary: Get Me
      description: Get current user information
      operationId: get_me_api_v1_auth_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
      security:
      - HTTPBearer: []
  /api/v1/auth/refresh:
    post:
      tags:
      - Authentication
      summary: Refresh Token
      description: Refresh access token
      operationId: refresh_token_api_v1_auth_refresh_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
      security:
      - HTTPBearer: []
  /api/v1/auth/logout:
    post:
      tags:
      - Authentication
      summary: Logout
      description: Logout user (invalidate session if using sessions)
      operationId: logout_api_v1_auth_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      security:
      - HTTPBearer: []
  /api/v1/auth/change-password:
    post:
      tags:
      - Authentication
      summary: Change Password
      description: Change current user's password
      operationId: change_password_api_v1_auth_change_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/auth/reset-password:
    post:
      tags:
      - Authentication
      summary: Reset Password
      description: Request password reset
      operationId: reset_password_api_v1_auth_reset_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/tools:
    get:
      tags:
      - Tools
      summary: List Tools
      description: List all available tools
      operationId: list_tools_api_v1_tools_get
      parameters:
      - name: authorization
        in: header
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Authorization
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/tools/{tool_name}/execute:
    post:
      tags:
      - Tools
      summary: Execute Tool
      description: Execute a specific tool
      operationId: execute_tool_api_v1_tools__tool_name__execute_post
      security:
      - HTTPBearer: []
      parameters:
      - name: tool_name
        in: path
        required: true
        schema:
          type: string
          title: Tool Name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolExecutionRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolExecutionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/resources:
    get:
      tags:
      - Resources
      summary: List Resources
      description: List all available resources
      operationId: list_resources_api_v1_resources_get
      parameters:
      - name: authorization
        in: header
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Authorization
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/resources/{resource_uri}:
    get:
      tags:
      - Resources
      summary: Read Resource
      description: Read a specific resource
      operationId: read_resource_api_v1_resources__resource_uri__get
      security:
      - HTTPBearer: []
      parameters:
      - name: resource_uri
        in: path
        required: true
        schema:
          type: string
          title: Resource Uri
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceReadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/vectors/embed:
    post:
      tags:
      - Vector Operations
      summary: Generate Embeddings
      description: Generate embeddings for text
      operationId: generate_embeddings_api_v1_vectors_embed_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/vectors/search:
    post:
      tags:
      - Vector Operations
      summary: Search Vectors
      description: Search for similar documents
      operationId: search_vectors_api_v1_vectors_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VectorSearchRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorSearchResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/vectors/ingest:
    post:
      tags:
      - Vector Operations
      summary: Ingest Documents
      description: Ingest documents into vector database
      operationId: ingest_documents_api_v1_vectors_ingest_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIngestionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIngestionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/vectors/documents/{document_id}:
    delete:
      tags:
      - Vector Operations
      summary: Delete Document
      description: Delete a document from vector database
      operationId: delete_document_api_v1_vectors_documents__document_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/vectors/stats:
    get:
      tags:
      - Vector Operations
      summary: Get Vector Stats
      description: Get vector database statistics
      operationId: get_vector_stats_api_v1_vectors_stats_get
      parameters:
      - name: authorization
        in: header
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Authorization
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/ingest:
    post:
      tags:
      - emails
      - email-ingestion
      summary: Ingest Email
      description: Ingest a new email into the system
      operationId: ingest_email_api_v1_emails_ingest_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailIngest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/emails/ingest/bulk:
    post:
      tags:
      - emails
      - email-ingestion
      summary: Ingest Bulk Emails
      description: Bulk ingest multiple emails
      operationId: ingest_bulk_emails_api_v1_emails_ingest_bulk_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                items:
                  $ref: '#/components/schemas/EmailIngest'
                type: array
              type: object
              title: Data
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/emails/bulk-update:
    post:
      tags:
      - emails
      - email-bulk
      summary: Bulk Update Emails
      description: Bulk update multiple emails
      operationId: bulk_update_emails_api_v1_emails_bulk_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkEmailUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/emails/bulk/mark-read:
    post:
      tags:
      - emails
      - email-bulk
      summary: Bulk Mark Emails Read
      description: Bulk mark emails as read
      operationId: bulk_mark_emails_read_api_v1_emails_bulk_mark_read_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                items:
                  type: string
                type: array
              type: object
              title: Data
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/emails/bulk/assign-project:
    post:
      tags:
      - emails
      - email-bulk
      summary: Bulk Assign Emails To Project
      description: Bulk assign emails to a project
      operationId: bulk_assign_emails_to_project_api_v1_emails_bulk_assign_project_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
              title: Data
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/emails/bulk/delete:
    post:
      tags:
      - emails
      - email-bulk
      summary: Bulk Delete Emails
      description: Bulk delete emails
      operationId: bulk_delete_emails_api_v1_emails_bulk_delete_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                items:
                  type: string
                type: array
              type: object
              title: Data
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/emails/stats:
    get:
      tags:
      - emails
      - email-stats
      summary: Get Email Statistics
      description: Get overall email statistics
      operationId: get_email_statistics_api_v1_emails_stats_get
      security:
      - HTTPBearer: []
      parameters:
      - name: date_from
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Date From
      - name: date_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Date To
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/stats/project/{project_id}:
    get:
      tags:
      - emails
      - email-stats
      summary: Get Project Email Statistics
      description: Get email statistics for a specific project
      operationId: get_project_email_statistics_api_v1_emails_stats_project__project_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/stats/timeline:
    get:
      tags:
      - emails
      - email-stats
      summary: Get Email Activity Timeline
      description: Get email activity timeline
      operationId: get_email_activity_timeline_api_v1_emails_stats_timeline_get
      security:
      - HTTPBearer: []
      parameters:
      - name: days
        in: query
        required: false
        schema:
          type: integer
          maximum: 365
          minimum: 1
          description: Number of days to include
          default: 30
          title: Days
        description: Number of days to include
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/statistics/overview:
    get:
      tags:
      - emails
      - email-stats
      summary: Get Email Statistics Legacy
      description: Get email statistics (legacy endpoint for backward compatibility)
      operationId: get_email_statistics_legacy_api_v1_emails_statistics_overview_get
      security:
      - HTTPBearer: []
      parameters:
      - name: date_from
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Date From
      - name: date_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Date To
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStatistics'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/:
    get:
      tags:
      - emails
      - email-crud
      summary: List Emails
      description: List emails with pagination
      operationId: list_emails_api_v1_emails__get
      security:
      - HTTPBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: size
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
          title: Size
      - name: project_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Project Id
      - name: is_read
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Read
      - name: is_flagged
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Flagged
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/search:
    get:
      tags:
      - emails
      - email-crud
      summary: Search Emails Advanced
      description: Search emails with various filters
      operationId: search_emails_advanced_api_v1_emails_search_get
      security:
      - HTTPBearer: []
      parameters:
      - name: q
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search query for subject/body
          title: Q
        description: Search query for subject/body
      - name: from
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by sender email
          title: From
        description: Filter by sender email
      - name: to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by recipient email
          title: To
        description: Filter by recipient email
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for date range
          title: Start Date
        description: Start date for date range
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for date range
          title: End Date
        description: End date for date range
      - name: project_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by project ID
          title: Project Id
        description: Filter by project ID
      - name: thread_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by thread ID
          title: Thread Id
        description: Filter by thread ID
      - name: is_read
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by read status
          title: Is Read
        description: Filter by read status
      - name: is_flagged
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by flagged status
          title: Is Flagged
        description: Filter by flagged status
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page number
          default: 1
          title: Page
        description: Page number
      - name: size
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Items per page
          default: 20
          title: Size
        description: Items per page
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/by-message-id/{message_id}:
    get:
      tags:
      - emails
      - email-crud
      summary: Get Email By Message Id
      description: Get email by external message ID
      operationId: get_email_by_message_id_api_v1_emails_by_message_id__message_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          title: Message Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/thread/{thread_id}:
    get:
      tags:
      - emails
      - email-crud
      summary: Get Thread Emails
      description: Get all emails in a thread
      operationId: get_thread_emails_api_v1_emails_thread__thread_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: thread_id
        in: path
        required: true
        schema:
          type: string
          title: Thread Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailSummary'
                title: Response Get Thread Emails Api V1 Emails Thread  Thread Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/{email_id}:
    get:
      tags:
      - emails
      - email-crud
      summary: Get Email
      description: Get email by ID
      operationId: get_email_api_v1_emails__email_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - emails
      - email-crud
      summary: Update Email
      description: Update email properties
      operationId: update_email_api_v1_emails__email_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - emails
      - email-crud
      summary: Delete Email
      description: Delete an email
      operationId: delete_email_api_v1_emails__email_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/{email_id}/mark-read:
    post:
      tags:
      - emails
      - email-crud
      summary: Mark Email As Read
      description: Mark an email as read
      operationId: mark_email_as_read_api_v1_emails__email_id__mark_read_post
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/{email_id}/mark-unread:
    post:
      tags:
      - emails
      - email-crud
      summary: Mark Email As Unread
      description: Mark an email as unread
      operationId: mark_email_as_unread_api_v1_emails__email_id__mark_unread_post
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/{email_id}/flag:
    post:
      tags:
      - emails
      - email-crud
      summary: Flag Email
      description: Flag an email
      operationId: flag_email_api_v1_emails__email_id__flag_post
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/{email_id}/unflag:
    post:
      tags:
      - emails
      - email-crud
      summary: Unflag Email
      description: Unflag an email
      operationId: unflag_email_api_v1_emails__email_id__unflag_post
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/emails/{email_id}/assign-project:
    post:
      tags:
      - emails
      - email-crud
      summary: Assign Email To Project
      description: Assign an email to a project
      operationId: assign_email_to_project_api_v1_emails__email_id__assign_project_post
      security:
      - HTTPBearer: []
      parameters:
      - name: email_id
        in: path
        required: true
        schema:
          type: string
          title: Email Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              description: Project ID to assign
              title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/:
    post:
      tags:
      - people
      summary: Create Person
      description: Create a new person
      operationId: create_person_api_v1_people__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - people
      summary: List People
      description: List all people with pagination
      operationId: list_people_api_v1_people__get
      security:
      - HTTPBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: size
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          default: 20
          title: Size
      - name: is_active
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
      - name: is_external
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is External
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/search:
    get:
      tags:
      - people
      summary: Search People
      description: Search people with various filters
      operationId: search_people_api_v1_people_search_get
      security:
      - HTTPBearer: []
      parameters:
      - name: q
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search query
          title: Q
        description: Search query
      - name: organization
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Organization
      - name: domain
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Domain
      - name: is_active
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
      - name: is_external
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is External
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          default: 20
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonResponse'
                title: Response Search People Api V1 People Search Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/autocomplete:
    get:
      tags:
      - people
      summary: Autocomplete People
      description: Autocomplete people for UI
      operationId: autocomplete_people_api_v1_people_autocomplete_get
      security:
      - HTTPBearer: []
      parameters:
      - name: prefix
        in: query
        required: true
        schema:
          type: string
          description: Name or email prefix
          title: Prefix
        description: Name or email prefix
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          default: 10
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/by-email/{email}:
    get:
      tags:
      - people
      summary: Get Person By Email
      description: Get person by email address
      operationId: get_person_by_email_api_v1_people_by_email__email__get
      security:
      - HTTPBearer: []
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
          title: Email
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/{person_id}:
    get:
      tags:
      - people
      summary: Get Person
      description: Get person by ID
      operationId: get_person_api_v1_people__person_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - people
      summary: Replace Person
      description: Replace person information (full update)
      operationId: replace_person_api_v1_people__person_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - people
      summary: Update Person
      description: Update person information (partial update)
      operationId: update_person_api_v1_people__person_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - people
      summary: Delete Person
      description: Delete a person
      operationId: delete_person_api_v1_people__person_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/{person_id}/merge:
    post:
      tags:
      - people
      summary: Merge People
      description: Merge two person records
      operationId: merge_people_api_v1_people__person_id__merge_post
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/{person_id}/projects:
    get:
      tags:
      - people
      summary: Get Person Projects
      description: Get projects associated with a person
      operationId: get_person_projects_api_v1_people__person_id__projects_get
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/{person_id}/projects/{project_id}:
    post:
      tags:
      - people
      summary: Add Person To Project
      description: Add person to project
      operationId: add_person_to_project_api_v1_people__person_id__projects__project_id__post
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_add_person_to_project_api_v1_people__person_id__projects__project_id__post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - people
      summary: Remove Person From Project
      description: Remove person from project
      operationId: remove_person_from_project_api_v1_people__person_id__projects__project_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/{person_id}/emails:
    get:
      tags:
      - people
      summary: Get Person Emails
      description: Get emails sent and received by a person
      operationId: get_person_emails_api_v1_people__person_id__emails_get
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/people/{person_id}/stats:
    get:
      tags:
      - people
      summary: Get Person Statistics
      description: Get statistics for a person
      operationId: get_person_statistics_api_v1_people__person_id__stats_get
      security:
      - HTTPBearer: []
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonStatistics'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/projects/test:
    get:
      tags:
      - projects
      - project-search
      summary: Test Endpoint
      description: Test endpoint to verify routing works - no auth required
      operationId: test_endpoint_api_v1_projects_test_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/projects/search:
    get:
      tags:
      - projects
      - project-search
      summary: Search Projects
      description: Search projects by name or domain
      operationId: search_projects_api_v1_projects_search_get
      security:
      - HTTPBearer: []
      parameters:
      - name: q
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search query
          title: Q
        description: Search query
      - name: domain
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Email domain filter
          title: Domain
        description: Email domain filter
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/projects/find-for-email:
    post:
      tags:
      - projects
      - project-search
      summary: Find Project For Email
      description: Find the appropriate project for an email address
      operationId: find_project_for_email_api_v1_projects_find_for_email_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
              title: Data
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/projects/{project_id}/stats:
    get:
      tags:
      - projects
      - project-stats
      summary: Get Project Stats
      description: Get statistics for a specific project
      operationId: get_project_stats_api_v1_projects__project_id__stats_get
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/projects/statistics/overview:
    get:
      tags:
      - projects
      - project-stats
      summary: Get Project Statistics
      description: Get project statistics
      operationId: get_project_statistics_api_v1_projects_statistics_overview_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatistics'
      security:
      - HTTPBearer: []
  /api/v1/projects/{project_id}/people:
    post:
      tags:
      - projects
      - project-people
      summary: Add Person To Project
      description: Add a person to a project
      operationId: add_person_to_project_api_v1_projects__project_id__people_post
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              title: Data
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - projects
      - project-people
      summary: List Project People
      description: List all people in a project
      operationId: list_project_people_api_v1_projects__project_id__people_get
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/projects/{project_id}/people/{person_id}:
    delete:
      tags:
      - projects
      - project-people
      summary: Remove Person From Project
      description: Remove a person from a project
      operationId: remove_person_from_project_api_v1_projects__project_id__people__person_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: person_id
        in: path
        required: true
        schema:
          type: string
          title: Person Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/projects/bulk-assign-people:
    post:
      tags:
      - projects
      - project-people
      summary: Bulk Assign People
      description: Bulk assign people to a project
      operationId: bulk_assign_people_api_v1_projects_bulk_assign_people_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPersonProjectAssign'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/projects/:
    post:
      tags:
      - projects
      - project-crud
      summary: Create Project
      description: Create a new project
      operationId: create_project_api_v1_projects__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - projects
      - project-crud
      summary: List Projects
      description: List projects with pagination
      operationId: list_projects_api_v1_projects__get
      security:
      - HTTPBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: size
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
          title: Size
      - name: is_active
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/projects/{project_id}:
    get:
      tags:
      - projects
      - project-crud
      summary: Get Project
      description: Get project by ID
      operationId: get_project_api_v1_projects__project_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - projects
      - project-crud
      summary: Replace Project
      description: Replace/fully update a project
      operationId: replace_project_api_v1_projects__project_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - projects
      - project-crud
      summary: Update Project
      description: Update project information
      operationId: update_project_api_v1_projects__project_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - projects
      - project-crud
      summary: Delete Project
      description: Delete a project
      operationId: delete_project_api_v1_projects__project_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/:
    get:
      tags:
      - Documents
      summary: List Documents
      description: List all documents (protected endpoint)
      operationId: list_documents_api_v1_documents__get
      security:
      - HTTPBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: size
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          default: 20
          title: Size
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Documents
      summary: Create Document
      description: Create a new document (protected endpoint)
      operationId: create_document_api_v1_documents__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/{document_id}:
    get:
      tags:
      - Documents
      summary: Get Document
      description: Get a specific document (protected endpoint)
      operationId: get_document_api_v1_documents__document_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Documents
      summary: Delete Document
      description: Delete a document (protected endpoint)
      operationId: delete_document_api_v1_documents__document_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/protected/resource:
    get:
      tags:
      - Protected
      summary: Get Protected Resource
      description: A protected resource endpoint for testing
      operationId: get_protected_resource_api_v1_protected_resource_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - HTTPBearer: []
  /api/v1/admin/users:
    get:
      tags:
      - Admin
      summary: List Users
      description: List all users (admin only)
      operationId: list_users_api_v1_admin_users_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - HTTPBearer: []
  /api/v1/system/info:
    get:
      tags:
      - System
      summary: System Info
      description: Get system information - requires authentication
      operationId: system_info_api_v1_system_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - HTTPBearer: []
  /api/v1/system/database/stats:
    get:
      tags:
      - System
      summary: Database Stats
      description: Get database statistics - requires authentication
      operationId: database_stats_api_v1_system_database_stats_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - HTTPBearer: []
  /api/v1/system/cache/stats:
    get:
      tags:
      - System
      summary: Cache Stats
      description: Get cache statistics - requires authentication
      operationId: cache_stats_api_v1_system_cache_stats_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - HTTPBearer: []
  /:
    get:
      summary: Root
      description: Redirect to documentation
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /metrics:
    get:
      summary: Metrics
      description: Prometheus metrics endpoint
      operationId: metrics_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/info:
    get:
      summary: Api Info
      description: Get API information
      operationId: api_info_api_v1_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    Body_add_person_to_project_api_v1_people__person_id__projects__project_id__post:
      properties:
        person_id_param:
          anyOf:
          - type: string
          - type: 'null'
          title: Person Id Param
        role:
          type: string
          title: Role
          default: member
      type: object
      title: Body_add_person_to_project_api_v1_people__person_id__projects__project_id__post
    BulkEmailUpdate:
      properties:
        email_ids:
          items:
            type: string
          type: array
          title: Email Ids
        update:
          $ref: '#/components/schemas/EmailUpdate'
      type: object
      required:
      - email_ids
      - update
      title: BulkEmailUpdate
    BulkPersonProjectAssign:
      properties:
        person_ids:
          items:
            type: string
          type: array
          title: Person Ids
        project_id:
          type: string
          title: Project Id
        role:
          type: string
          title: Role
          default: member
      type: object
      required:
      - person_ids
      - project_id
      title: BulkPersonProjectAssign
    DocumentCreate:
      properties:
        title:
          type: string
          maxLength: 255
          minLength: 1
          title: Title
        content:
          type: string
          title: Content
        tags:
          items:
            type: string
          type: array
          title: Tags
          default: []
      type: object
      required:
      - title
      - content
      title: DocumentCreate
      description: Document creation schema
    DocumentIngestionRequest:
      properties:
        documents:
          items:
            type: string
          type: array
          title: Documents
        metadatas:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Metadatas
        ids:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Ids
      type: object
      required:
      - documents
      title: DocumentIngestionRequest
      description: Request to ingest documents
      example:
        documents:
        - Document 1 content
        - Document 2 content
        metadatas:
        - source: file1.txt
        - source: file2.txt
    DocumentIngestionResponse:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
          default: success
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        document_ids:
          items:
            type: string
          type: array
          title: Document Ids
        count:
          type: integer
          title: Count
        processing_time:
          type: number
          title: Processing Time
      type: object
      required:
      - document_ids
      - count
      - processing_time
      title: DocumentIngestionResponse
      description: Document ingestion result
    DocumentList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/DocumentResponse'
          type: array
          title: Items
        total:
          type: integer
          title: Total
        page:
          type: integer
          title: Page
        size:
          type: integer
          title: Size
      type: object
      required:
      - items
      - total
      - page
      - size
      title: DocumentList
      description: Document list response
    DocumentResponse:
      properties:
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        content:
          type: string
          title: Content
        tags:
          items:
            type: string
          type: array
          title: Tags
          default: []
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - title
      - content
      - owner_id
      - created_at
      - updated_at
      title: DocumentResponse
      description: Document response schema
    EmailIngest:
      properties:
        to:
          items:
            type: string
            format: email
          type: array
          title: To
        from:
          type: string
          format: email
          title: From
        subject:
          type: string
          title: Subject
        datetime:
          type: string
          format: date-time
          title: Datetime
        body:
          type: string
          title: Body
        cc:
          items:
            type: string
            format: email
          type: array
          title: Cc
        body_text:
          anyOf:
          - type: string
          - type: 'null'
          title: Body Text
        email_id:
          type: string
          title: Email Id
        message_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Message Id
        in_reply_to:
          anyOf:
          - type: string
          - type: 'null'
          title: In Reply To
        thread_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Thread Id
        headers:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Headers
        attachments:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Attachments
        size_bytes:
          anyOf:
          - type: integer
          - type: 'null'
          title: Size Bytes
      type: object
      required:
      - to
      - from
      - subject
      - datetime
      - body
      - email_id
      title: EmailIngest
      description: Simplified email ingestion schema
    EmailRecipientResponse:
      properties:
        person:
          $ref: '#/components/schemas/PersonSummary'
        recipient_type:
          $ref: '#/components/schemas/RecipientTypeSchema'
      type: object
      required:
      - person
      - recipient_type
      title: EmailRecipientResponse
    EmailResponse:
      properties:
        email_id:
          type: string
          title: Email Id
        message_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Message Id
        in_reply_to:
          anyOf:
          - type: string
          - type: 'null'
          title: In Reply To
        thread_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Thread Id
        subject:
          type: string
          title: Subject
        body:
          type: string
          title: Body
        body_text:
          anyOf:
          - type: string
          - type: 'null'
          title: Body Text
        datetime_sent:
          type: string
          format: date-time
          title: Datetime Sent
        headers:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Headers
        attachments:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Attachments
        size_bytes:
          anyOf:
          - type: integer
          - type: 'null'
          title: Size Bytes
        id:
          type: string
          title: Id
        is_read:
          type: boolean
          title: Is Read
        is_flagged:
          type: boolean
          title: Is Flagged
        is_draft:
          type: boolean
          title: Is Draft
        from_person_id:
          type: string
          title: From Person Id
        project_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Project Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        sender:
          $ref: '#/components/schemas/PersonSummary'
        project:
          anyOf:
          - $ref: '#/components/schemas/ProjectSummary'
          - type: 'null'
        recipients:
          items:
            $ref: '#/components/schemas/EmailRecipientResponse'
          type: array
          title: Recipients
          default: []
        project_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Project Name
        has_attachments:
          type: boolean
          title: Has Attachments
          default: false
        attachment_count:
          type: integer
          title: Attachment Count
          default: 0
        from:
          anyOf:
          - type: string
          - type: 'null'
          title: From
      type: object
      required:
      - email_id
      - subject
      - body
      - datetime_sent
      - id
      - is_read
      - is_flagged
      - is_draft
      - from_person_id
      - created_at
      - updated_at
      - sender
      title: EmailResponse
    EmailStatistics:
      properties:
        total_emails:
          type: integer
          title: Total Emails
        unread_count:
          type: integer
          title: Unread Count
        flagged_count:
          type: integer
          title: Flagged Count
        draft_count:
          type: integer
          title: Draft Count
        emails_by_project:
          additionalProperties:
            type: integer
          type: object
          title: Emails By Project
        emails_by_sender:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Emails By Sender
        emails_by_date:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Emails By Date
        average_response_time:
          anyOf:
          - type: number
          - type: 'null'
          title: Average Response Time
      type: object
      required:
      - total_emails
      - unread_count
      - flagged_count
      - draft_count
      - emails_by_project
      - emails_by_sender
      - emails_by_date
      title: EmailStatistics
    EmailSummary:
      properties:
        id:
          type: string
          title: Id
        email_id:
          type: string
          title: Email Id
        subject:
          type: string
          title: Subject
        datetime_sent:
          type: string
          format: date-time
          title: Datetime Sent
        sender:
          $ref: '#/components/schemas/PersonSummary'
        is_read:
          type: boolean
          title: Is Read
        is_flagged:
          type: boolean
          title: Is Flagged
        thread_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Thread Id
      type: object
      required:
      - id
      - email_id
      - subject
      - datetime_sent
      - sender
      - is_read
      - is_flagged
      title: EmailSummary
    EmailUpdate:
      properties:
        is_read:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Read
        is_flagged:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Flagged
        is_draft:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Draft
        project_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Project Id
      type: object
      title: EmailUpdate
    EmbeddingRequest:
      properties:
        texts:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          title: Texts
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        normalize:
          type: boolean
          title: Normalize
          default: true
      type: object
      required:
      - texts
      title: EmbeddingRequest
      description: Request to generate embeddings
      example:
        normalize: true
        texts:
        - Sample text to embed
    EmbeddingResponse:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
          default: success
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        embeddings:
          items:
            items:
              type: number
            type: array
          type: array
          title: Embeddings
        model:
          type: string
          title: Model
        dimension:
          type: integer
          title: Dimension
        count:
          type: integer
          title: Count
      type: object
      required:
      - embeddings
      - model
      - dimension
      - count
      title: EmbeddingResponse
      description: Embedding generation result
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthResponse:
      properties:
        status:
          type: string
          title: Status
        version:
          type: string
          title: Version
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        services:
          additionalProperties:
            type: string
          type: object
          title: Services
        metrics:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Metrics
      type: object
      required:
      - status
      - version
      - timestamp
      - services
      title: HealthResponse
      description: Health check response
    LoginRequest:
      properties:
        username:
          type: string
          minLength: 1
          title: Username
        password:
          type: string
          minLength: 1
          title: Password
      type: object
      required:
      - username
      - password
      title: LoginRequest
      description: Login request schema
    MergeRequest:
      properties:
        merge_with_id:
          type: string
          title: Merge With Id
      type: object
      required:
      - merge_with_id
      title: MergeRequest
    MessageResponse:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
      - message
      title: MessageResponse
      description: Simple message response
    PasswordChangeRequest:
      properties:
        current_password:
          type: string
          title: Current Password
        new_password:
          type: string
          minLength: 8
          title: New Password
      type: object
      required:
      - current_password
      - new_password
      title: PasswordChangeRequest
      description: Password change request
    PasswordResetRequest:
      properties:
        email:
          type: string
          format: email
          title: Email
      type: object
      required:
      - email
      title: PasswordResetRequest
      description: Password reset request
    PersonCreate:
      properties:
        email:
          type: string
          format: email
          title: Email
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
        organization:
          anyOf:
          - type: string
          - type: 'null'
          title: Organization
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_external:
          type: boolean
          title: Is External
          default: false
        person_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Person Metadata
      type: object
      required:
      - email
      title: PersonCreate
    PersonResponse:
      properties:
        email:
          type: string
          format: email
          title: Email
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
        organization:
          anyOf:
          - type: string
          - type: 'null'
          title: Organization
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_external:
          type: boolean
          title: Is External
          default: false
        person_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Person Metadata
        id:
          type: string
          title: Id
        full_name:
          type: string
          title: Full Name
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - email
      - id
      - full_name
      - created_at
      - updated_at
      title: PersonResponse
    PersonStatistics:
      properties:
        emails_sent:
          type: integer
          title: Emails Sent
        emails_received:
          type: integer
          title: Emails Received
        projects_count:
          type: integer
          title: Projects Count
        first_email_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: First Email Date
        last_email_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Email Date
      type: object
      required:
      - emails_sent
      - emails_received
      - projects_count
      title: PersonStatistics
    PersonSummary:
      properties:
        id:
          type: string
          title: Id
        email:
          type: string
          format: email
          title: Email
        full_name:
          type: string
          title: Full Name
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        organization:
          anyOf:
          - type: string
          - type: 'null'
          title: Organization
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_external:
          type: boolean
          title: Is External
          default: false
      type: object
      required:
      - id
      - email
      - full_name
      title: PersonSummary
    PersonUpdate:
      properties:
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
        organization:
          anyOf:
          - type: string
          - type: 'null'
          title: Organization
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
        is_external:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is External
        person_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Person Metadata
      type: object
      title: PersonUpdate
    ProjectCreate:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        email_domains:
          items:
            type: string
          type: array
          title: Email Domains
        is_active:
          type: boolean
          title: Is Active
          default: true
        auto_assign:
          type: boolean
          title: Auto Assign
          default: true
        project_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Project Metadata
        tags:
          items:
            type: string
          type: array
          title: Tags
      type: object
      required:
      - name
      title: ProjectCreate
    ProjectResponse:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        email_domains:
          items:
            type: string
          type: array
          title: Email Domains
        is_active:
          type: boolean
          title: Is Active
          default: true
        auto_assign:
          type: boolean
          title: Auto Assign
          default: true
        project_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Project Metadata
        tags:
          items:
            type: string
          type: array
          title: Tags
        id:
          type: string
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        people:
          items:
            $ref: '#/components/schemas/PersonSummary'
          type: array
          title: People
          default: []
        email_count:
          type: integer
          title: Email Count
          default: 0
      type: object
      required:
      - name
      - id
      - created_at
      - updated_at
      title: ProjectResponse
    ProjectStatistics:
      properties:
        total_projects:
          type: integer
          title: Total Projects
        active_projects:
          type: integer
          title: Active Projects
        total_people:
          type: integer
          title: Total People
        emails_per_project:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Emails Per Project
        most_active_domains:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Most Active Domains
      type: object
      required:
      - total_projects
      - active_projects
      - total_people
      - emails_per_project
      - most_active_domains
      title: ProjectStatistics
    ProjectSummary:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        email_domains:
          items:
            type: string
          type: array
          title: Email Domains
          default: []
      type: object
      required:
      - id
      - name
      title: ProjectSummary
    ProjectUpdate:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        email_domains:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Email Domains
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
        auto_assign:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Auto Assign
        project_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Project Metadata
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
      type: object
      title: ProjectUpdate
    RecipientTypeSchema:
      type: string
      enum:
      - TO
      - CC
      - BCC
      title: RecipientTypeSchema
    RegisterRequest:
      properties:
        username:
          type: string
          maxLength: 100
          minLength: 3
          title: Username
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          minLength: 8
          title: Password
        full_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Full Name
      type: object
      required:
      - username
      - email
      - password
      title: RegisterRequest
      description: User registration request
    ResourceInfo:
      properties:
        uri:
          type: string
          title: Uri
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        mime_type:
          type: string
          title: Mime Type
      type: object
      required:
      - uri
      - name
      - description
      - mime_type
      title: ResourceInfo
      description: Resource information
    ResourceListResponse:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
          default: success
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        resources:
          items:
            $ref: '#/components/schemas/ResourceInfo'
          type: array
          title: Resources
        count:
          type: integer
          title: Count
      type: object
      required:
      - resources
      - count
      title: ResourceListResponse
      description: List of available resources
    ResourceReadResponse:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
          default: success
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        uri:
          type: string
          title: Uri
        content:
          type: string
          title: Content
        mime_type:
          type: string
          title: Mime Type
      type: object
      required:
      - uri
      - content
      - mime_type
      title: ResourceReadResponse
      description: Resource content response
    SearchResult:
      properties:
        id:
          type: string
          title: Id
        document:
          type: string
          title: Document
        score:
          type: number
          title: Score
        metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Metadata
      type: object
      required:
      - id
      - document
      - score
      title: SearchResult
      description: Individual search result
    StatusEnum:
      type: string
      enum:
      - success
      - error
      - pending
      - in_progress
      title: StatusEnum
      description: API response status
    TokenResponse:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
          default: bearer
        expires_in:
          type: integer
          title: Expires In
          description: Token expiration in seconds
      type: object
      required:
      - access_token
      - expires_in
      title: TokenResponse
      description: Token response schema
    ToolExecutionRequest:
      properties:
        arguments:
          additionalProperties: true
          type: object
          title: Arguments
        timeout:
          anyOf:
          - type: integer
            maximum: 300.0
            minimum: 1.0
          - type: 'null'
          title: Timeout
          default: 30
      type: object
      title: ToolExecutionRequest
      description: Request to execute a tool
      example:
        arguments:
          encoding: utf-8
          path: /tmp/file.txt
        timeout: 30
    ToolExecutionResponse:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
          default: success
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        result:
          title: Result
        execution_time:
          type: number
          title: Execution Time
        tool_name:
          type: string
          title: Tool Name
      type: object
      required:
      - result
      - execution_time
      - tool_name
      title: ToolExecutionResponse
      description: Tool execution result
    ToolInfo:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        input_schema:
          additionalProperties: true
          type: object
          title: Input Schema
      type: object
      required:
      - name
      - description
      - input_schema
      title: ToolInfo
      description: Tool information
    ToolListResponse:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
          default: success
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        tools:
          items:
            $ref: '#/components/schemas/ToolInfo'
          type: array
          title: Tools
        count:
          type: integer
          title: Count
      type: object
      required:
      - tools
      - count
      title: ToolListResponse
      description: List of available tools
    UserProfile:
      properties:
        username:
          type: string
          title: Username
        email:
          type: string
          format: email
          title: Email
        full_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Full Name
        roles:
          items:
            type: string
          type: array
          title: Roles
          default: []
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_superuser:
          type: boolean
          title: Is Superuser
          default: false
      type: object
      required:
      - username
      - email
      title: UserProfile
      description: Current user profile
    UserResponse:
      properties:
        id:
          type: string
          title: Id
        username:
          type: string
          title: Username
        email:
          type: string
          format: email
          title: Email
        full_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Full Name
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_superuser:
          type: boolean
          title: Is Superuser
          default: false
        roles:
          items:
            type: string
          type: array
          title: Roles
          default: []
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - username
      - email
      - created_at
      - updated_at
      title: UserResponse
      description: User response schema (without sensitive data)
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    VectorSearchRequest:
      properties:
        query:
          type: string
          title: Query
        limit:
          type: integer
          maximum: 100.0
          minimum: 1.0
          title: Limit
          default: 10
        filter:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Filter
        include_metadata:
          type: boolean
          title: Include Metadata
          default: true
      type: object
      required:
      - query
      title: VectorSearchRequest
      description: Vector search request
      example:
        include_metadata: true
        limit: 10
        query: machine learning algorithms
    VectorSearchResponse:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
          default: success
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        results:
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
          title: Results
        query:
          type: string
          title: Query
        count:
          type: integer
          title: Count
        search_time:
          type: number
          title: Search Time
      type: object
      required:
      - results
      - query
      - count
      - search_time
      title: VectorSearchResponse
      description: Vector search results
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
